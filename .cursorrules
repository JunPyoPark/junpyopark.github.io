# Jekyll 블로그 개발 가이드

## 🎨 배경색 문제 해결 방법

### 문제 상황
- Jekyll 블로그에서 포스트별 고유한 배경색이 전역 CSS에 의해 덮어써짐
- `assets/css/main.css`의 `body { background-color: #fbfbfb; }`가 포스트 CSS보다 높은 우선순위를 가짐
- 결과적으로 포스트의 의도된 디자인이 무시되고 전역 배경색이 적용됨

### 해결 방법
모든 포스트의 `body` CSS에 `!important`를 추가하여 전역 CSS 간섭을 방지:

```css
body { 
    background-color: #원하는색상 !important;
    font-family: '폰트명', sans-serif;
}
```

### 적용 예시
```css
/* 집단 착각 - 연한 파란색 */
body { background-color: #F0F8FF !important; }

/* 소유와 자유 - 어두운 슬레이트 */
body { background-color: #0F172A !important; }

/* 국가란 무엇인가 - 흰색 */
body { background-color: white !important; }
```

### 자동화 스크립트
모든 2025년 포스트에 자동 적용:
```bash
for file in _posts/2025-*; do
  if grep -q "body {" "$file"; then
    sed -i 's/background-color: \([^;]*\);/background-color: \1 !important;/g' "$file"
  fi
done
```

### 중복 제거
중복된 `!important` 제거:
```bash
sed -i 's/!important !important/!important/g' _posts/2025-*
```

## 🖼️ 썸네일 이미지 문제 해결

### 문제 상황
- Jekyll 템플릿이 `assets/img/` 경로를 자동으로 추가
- 절대 URL 사용 시 경로가 중복되어 이미지가 로드되지 않음

### 해결 방법
1. 이미지를 로컬에 다운로드:
```bash
wget -O assets/img/파일명.jpg "https://이미지URL"
```

2. 포스트의 `img` 필드를 로컬 파일명으로 변경:
```yaml
img: "파일명.jpg"  # 절대 URL 대신 파일명만 사용
```

### Jekyll 템플릿 동작
- `index.html`: `{{"/assets/img/" | prepend: site.baseurl | append : post.img}}`
- `_layouts/post.html`: `{{ "/assets/img/" | prepend: site.baseurl | append : page.img}}`
- 자동으로 올바른 경로 생성: `/assets/img/파일명.jpg`

## 🔧 CSS 우선순위 규칙

### 전역 CSS (assets/css/main.css)
```css
body {
  background-color: #fbfbfb;  /* 낮은 우선순위 */
}
```

### 포스트별 CSS
```css
body { 
  background-color: #원하는색상 !important;  /* 높은 우선순위 */
}
```

### 우선순위 순서
1. `!important`가 있는 CSS (최고 우선순위)
2. 더 구체적인 선택자
3. 나중에 로드된 CSS
4. 전역 CSS

## 📝 체크리스트

새로운 포스트 추가 시:
- [ ] `img` 필드에 로컬 파일명 사용 (절대 URL 금지)
- [ ] `body` CSS에 `background-color: 색상 !important;` 추가
- [ ] 이미지 파일을 `assets/img/`에 저장
- [ ] 포스트별 고유한 디자인 테마 유지

## 🚨 주의사항

- `!important` 남용은 CSS 유지보수를 어렵게 만들 수 있음
- 포스트별 CSS는 최소한으로 사용하고 전역 스타일과 충돌하지 않도록 주의
- 이미지 파일명은 영문과 하이픈만 사용 (공백, 특수문자 금지)
